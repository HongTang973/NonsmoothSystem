%> define the  det condition of the LCO 
%> numerator

numer = @(t) -(lambda_2 - lambda_3)*(lambda_1 - lambda_2)*(lambda_1 - lambda_3)*...
    (-1 + b2)*exp(t*(lambda_1 + lambda_2 + lambda_3)) + ((lambda_2 - lambda_3)*...
    (-1 + b2)*lambda_1 - ((-1 + b2)*lambda_2 + b3 + lambda_3)*lambda_3)*...
    (lambda_1 - lambda_2)*exp(t*(lambda_1 + lambda_2)) + ((lambda_2 - lambda_3)*...
    (-1 + b2)*lambda_1 + lambda_2*(lambda_2 + (-1 + b2)*lambda_3 + b3))*...
    (lambda_1 - lambda_3)*exp(t*(lambda_1 + lambda_3)) - (lambda_1^2 + ((-1 + b2)...
    *lambda_2 + (-1 + b2)*lambda_3 + b3)*lambda_1 - lambda_2*lambda_3*(-1 + b2))...
    *(lambda_2 - lambda_3)*exp(t*(lambda_2 + lambda_3)) - (lambda_2 - lambda_3)*...
    ((-1 + b2)*lambda_1^2 + (b3 + lambda_2 + lambda_3)*lambda_1 - lambda_2*lambda_3)...
    *exp(t*lambda_1) + (lambda_1 - lambda_3)*(lambda_1*(lambda_2 - lambda_3) + ...
    ((-1 + b2)*lambda_2 + b3 + lambda_3)*lambda_2)*exp(t*lambda_2) - ...
    (((-lambda_2 + lambda_3)*lambda_1 + lambda_3*(lambda_2 + (-1 + b2)*lambda_3 + b3))*...
    exp(t*lambda_3) + (lambda_2 - lambda_3)*(lambda_1 - lambda_3))*(lambda_1 - lambda_2);
denom = (lambda_2 - lambda_3)*(lambda_1 - lambda_2)*(lambda_1 - lambda_3);

t_2_det = @(t) numer(t)./denom;


