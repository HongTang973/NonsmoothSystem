close all
load('./codim2_SN_mu_eta_curve.mat')

BEB_U = 0;
SN_U  = CR_points(2,7);
L_U   = -0.04;
R_U   = 0.04;

FIG2 = figure;
%
h0 = plot([BEB_U BEB_U],[-0.3 0.2],'b-','LineWidth',3);
hold on
h1 = plot(virtual_SN_mu, virtual_SN_eta,'k--','LineWidth',3,'DisplayName','Virtual LCO');

h2 = plot(admiss_SN_mu, admiss_SN_eta,'r-','LineWidth',3,'DisplayName','Addmissible LCO');
box2_x = [L_U L_U BEB_U BEB_U L_U];
box2_y = [-0.3 0.2 0.2 -0.3 -0.3];
V2 = [box2_x(1), box2_y(1);
    box2_x(2), box2_y(2);
    box2_x(3), box2_y(3);
    box2_x(4), box2_y(4)];
F2 = [1 2 3 4];
patch( 'Faces',F2, 'Vertices',V2,'EdgeColor',[1 1 1],'LineStyle','none', 'FaceColor', [1 0 0], 'FaceAlpha', 0.1)
xlim([L_U R_U])
grid on
box on
%>
Y = [0.2*ones(size(admiss_SN_mu));admiss_SN_eta];
area(x,Y)

% chaos region : for smaller pdf output, cover this region just useing a
% patch
box0_x = [0.6828 0.7085 0.7085 0.6828 0.6828];
box0_y = [10 10 -10 -10 10 ]*1e-3;
V_0 = [box0_x(1), box0_y(1);
    box0_x(2), box0_y(2);
    box0_x(3), box0_y(3);
    box0_x(4), box0_y(4)];
F_0 = [1 2 3 4];
%
index_0 = (x_1 >0.6828) & (x_1< 0.7085);
index = find(index_0>0);
y_1(index) = [];
x_1(index) = [];

%% ZOOM in
data = textread([data_folder, '\equilibrium_data.txt']);
x_2 = data(:,1)/nd_U;
ind1 = find(x_2 <= 0.6482);
ind2 = find(x_2 > 0.6482);

x_2  = x_2 -(0.6482 - 0.647872);

y_2 = data(:,2);
y_2(y_2<-0.01) =-0.01;
%
data = textread([data_folder, '\LCO_data.txt']);
x_3 = data(:,1);
y_3 = data(:,2);
%
FIG2= figure;
set(FIG2,'Units','inches')
hold on 
plot(x_list,A3,'k.','markersize',4)
% plot(x_1,y_1,'.','color',[0.1,0.1,1],'Markersize',6)
% plot the equilibrium branch
% h1=plot(x_2(ind1),y_2(ind1),'-','color',[1 0 0],'linewidth',3,'Markersize',10,'displayname','Stable AE');

h1=plot([0.638672 0.647872],[-9.34e-3 -0.01],'-','color',[1 0 0],'linewidth',3,'Markersize',10,'displayname','Stable AE');

% Color region  to zoom in
box1_x = [0.646 0.646 0.6495 0.6495 0.646];
box1_y = [-10.5 -8 -8 -10.5 -10.5 ]*1e-3;
V = [box1_x(1), box1_y(1);
    box1_x(2), box1_y(2);
    box1_x(3), box1_y(3);
    box1_x(4), box1_y(4)];
F = [1 2 3 4];
patch( 'Faces',F, 'Vertices',V,'EdgeColor','red','Linewidth',2, 'FaceColor', 'green', 'FaceAlpha', 0.1)

% h2=plot(x_2(ind2),y_2(ind2),'-','color',[0 0 1],'linewidth',3,'Markersize',10,'displayname','Stable PE');

h2=plot([0.647872 0.650],[-0.01 -0.01],'-','color',[0 0 1],'linewidth',3,'Markersize',10,'displayname','Stable PE');

%plot the LCO branch
% h3=plot(x_3 + (0.6507-0.6482),y_3,'-','color',[30/256 150/256 80/256 0.5],'linewidth',3,'Markersize',10,'displayname','Stable LCO');
% alpha(h3,0.1)
%
h4=plot(0.647872,-0.01,'ko','markersize',6,'markerfacecolor',[0.5 0.5 0.5],'linewidth',2,'displayname','BEB point');
h5=plot(par_ref(1)/30,-9.024e-3,'ko','markersize',6,'markerfacecolor',[1 0.0 0.0],'linewidth',2,'displayname','PD point');

patch( 'Faces',F, 'Vertices',V,'EdgeColor','red','Linewidth',2, 'FaceColor', 'green', 'FaceAlpha', 0.1)
xlabel('$\bar{U}$','interpreter','latex')
ylabel('$\beta$','interpreter','latex')
legend([h1,h2,  h4 h5],'Location','best')
%adjust the yticklabel
xlim([box1_x(1),box1_x(3)]);
ylim([box1_y(1),box1_y(2)]);
% xlim([0.646 0.6495])

%
set(gca,'fontsize',public.plot.gca.fontsize,...
        'fontname',public.plot.gca.fontname,...
        'linewidth',public.plot.gca.linewidth,...
        'Units','inches');

ax =gca;
ytick = ax.YTick;
expVal = -3;
new_label = cell(1,length(ytick));
for i =1:length(ytick)
    new_label{i}= sprintf('%g',ytick(i)/(10^expVal));
end
set(gca,'YTickLabel',new_label);
pos = get(gca,'Position');
% offset = 0.00;  %how far to the right you want the exponent
annotation('textbox',[0.00 0.90, 0.2, 0.2],...
    'Units', 'pixels',...
    'String',['$\times 10^{' num2str(expVal) '}$'],...
    'fontsize',public.plot.gca.fontsize,...
    'fontname',public.plot.gca.fontname,...
    'Interpreter','latex',...
    'VerticalAlignment','bottom',...
    'EdgeColor','none')
set(gca,'position',[public.plot.gca.ws_x  public.plot.gca.ws_y ...
     public.plot.gca.width public.plot.gca.height])
 pos = get(FIG2,'Position');
set(FIG2, 'PaperUnits', 'inches','PaperPosition', ...
    [0  0 ...
     public.plot.gca.ws_x+public.plot.gca.width  public.plot.gca.ws_y+public.plot.gca.height],...
    'PaperSize', pos(3:4));
 %save 
    name ='3DDOF_Airfoil_BEB_PD_BEB_codim2';
    picname2 = strcat(filepath,['\',name,'.pdf']);
%    exportgraphics(FIG2,picname2,'ContentType','vector')